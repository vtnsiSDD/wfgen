name: attempt install on ubuntu*

on:
  push:
    branches:
    - ci-dev

defaults:
  run:
    shell: bash

jobs:
  installable_checking:
    name: install on ${{ matrix.os }} with gr ${{ matrix.gr }}
    strategy:
      matrix:
        gr: [true, false]
        os: [ubuntu-latest, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install APT Dependencies
      run: |
        sudo apt update && sudo apt-get install -y libfftw3-dev libzmq3-dev \
        libboost-{chrono,filesystem,serialization,thread,program-options}-dev \
        libusb-1.0-0-dev libpthread-stubs0-dev \
        python3-dev python3-pip python3-virtualenv \
        libczmq-dev
    - name: Conditional APT Dependencies (w/o gr)
      run: |
        sudo apt-get install -y --no-install-recommends libuhd-dev
      if: ${{ ! matrix.gr }}
    - name: Conditional APT Dependencies (w/ gr)
      run: |
        sudo apt-get install -y libuhd-dev gnuradio-dev
      if: ${{ matrix.gr }}
    - name: Make Virtual Environment
      run: |
        virtualenv --system-site-packages dev-env && \
        mkdir audio_folder && \
        source dev-env/bin/activate && \
        pip install -I -U pip setuptools wheel build

    - name: CLI installing
      run: source dev-env/bin/activate && echo "A\n$(ls)" && echo "B\n$(ls ..)" && pip install -I -U .

    - name: builder
      run: source dev-env/bin/wfgen_env.sh && make -j4

    - name: installer
      run: source dev-env/bin/wfgen_env.sh && make -j4 install

    - name: importer
      run: |
        AUDIO_FOLDER=audio_folder source dev-env/bin/wfgen_env.sh && \
        function check(){ return \
        $( python3 -c "import wfgen;print(1-int(\"{0}\".format(wfgen.have_pygr()).lower() == \"$1\"))" ); } \
        && check ${{ matrix.gr }}
